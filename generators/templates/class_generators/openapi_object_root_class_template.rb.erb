#frozen_string_literal:true

# Generated Date: <%= Time.now.strftime('%Y-%m-%d') %>
# Template File:  generators/templates/class_generators/openapi_object_root_class_template.rb.erb
#
# This file was auto-generated by generators/tasks/generate.rb
#
# Please do not modify this file
# Please modify here: <%= "lib/simple_swagger_docs/#{generator.schema_version}/generators/schema" %>

<% if generator.require_contents.size != 0 %>
  <% generator.require_contents.each do |require_content| %>
require_relative '<%= require_content %>'
  <% end %>
<% end %>
require_relative '../root_updatable'
require_relative '../docs_methods'

module SimpleSwaggerDocs
  module <%= generator.schema_version.camelize %>
    module Schema
      class <%= generator.class_name %>
        extend RootUpdatable
        extend DocsMethods
        
        class << self
<% generator.attribute_accessors.each do |method_generator| %>
          attr_accessor :<%= method_generator.method_name_at_schema %>
<% end %>
          attr_accessor :<%= generator.schema_object_name %>

          def build
            @<%= generator.schema_object_name %> ||= {
              <% generator.attribute_accessors.each do |method_generator| %>
              <%= method_generator.method_name_at_schema %>: nil,
              <% end %>
          }
          end
<% if generator.generated_methods.size != 0 %>
  <% generator.generated_methods.each_with_index do |method_generator, index| %>
    
          def <%= method_generator.method_signature %>
            <%= method_generator.method_content %>
          end
  <% end %>
<% end %>

          def have_patterned_content?(method_name)
<% if generator.patterned_methods.size != 0 %>
            <%= generator.patterned_methods %>.include?(method_name)
<% else %>
            false
<% end %>
          end

          def patterned_object?
            false
          end
        end
      end
    end
  end
end
